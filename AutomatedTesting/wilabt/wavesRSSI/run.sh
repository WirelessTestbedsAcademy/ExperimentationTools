#!/bin/bash
WSNBIN=waves-rssi.bin
export LC_ALL=C

PWD=`pwd`
MYDIR=`dirname $0`
echo will switch from $PWD to $MYDIR
cd $MYDIR
BIN=`pwd`

#hostname is generated by emulab, virtual space in experiment
HOSTNAME=`hostname`
EXP=`echo $HOSTNAME | cut -d '.' -f 2`
NODE=`echo $HOSTNAME | cut -d '.' -f 1`
NODEEXT=`echo $HOSTNAME | cut -d '.' -f 2-`
RSSISERVERHOST=`echo node0.$NODEEXT`
RSSISERVERPORT=57404

CONTROLINT=ERROR
CONTROLIP=ERROR
HOST=ERROR
YEPKITID=ERROR
DEV=ERROR
DEVNAME=ERROR
DATE=`date '+%y_%h_%d-%H_%M_%S'`

sudo adduser `whoami` dialout


CONTROLINT=`route -n | awk '{print $4 " " $8}' | grep UG | awk '{print $2}'`
CONTROLIP=`ifconfig $CONTROLINT | grep 'inet addr' | awk '{print $2} ' | cut -d ':' -f 2` 
HOST=`dig +noall +answer -x $CONTROLIP | awk '{print $5}' | sed 's/\.$//'`
HOSTSHORT=`echo $HOST | cut -d '.' -f 1`

function finalize()
{
	result=`printf "=====%s, %s, %s, %s, %s, %s, %s, %s, %s =====\n" $CONTROLINT $CONTROLIP $HOST $YEPKITID $DEV $DEVNAME $NODE $EXP $DATE`
	echo $result
	sudo deluser `whoami` dialout
	exit 0
}

function prepareServer()
{
	serverScript=$BIN/$1.sh
	if [ ! -e $serverScript ]; then
		return
	fi
	port=$2
	if [ "" = "`nmap -PN -n localhost -sU -p $port | grep 'udp open' 2>/dev/null`" ]; then
		$BIN/ncat -m 100 -kvlu $port -e $serverScript &
	else 
		/usr/bin/logger -ip daemon.warn -t $0 "prepareServer() [$port] udp port already open!"
	fi
}

#function to prepare a pipe and socket
function preparePipeAndSocket()
{
	ref=$1
	port=$2
	pipe=""
	/usr/bin/logger -ip daemon.warn -t $0 "preparePipeAndSocket() [$ref:$port]"
	if [ ! "" = "`sudo /usr/bin/nmap -PN -n $RSSISERVERHOST -sU -p $port -g $port 2>/dev/null | grep 'udp open' 2>/dev/null`" ]; then
		pipe="/tmp/$ref.dat"
		if [ ! -e $pipe ]; then
			mkfifo $pipe
			chmod 666 $pipe
		else 
			/usr/bin/logger -ip daemon.warn -t $0 "preparePipeAndSocket() $pipe exists"
		fi
		/usr/bin/logger -ip daemon.warn -t $0 "preparePipeAndSocket() will redirect $pipe to [$RSSISERVERHOST:$port]"
		$BIN//udpredirect.pl -h $RSSISERVERHOST -p $port < $pipe &
	else 
		/usr/bin/logger -ip daemon.warn -t $0 "preparePipeAndSocket() [$RSSISERVERHOST:$port] udp port is not open!"
	fi
	eval $3=$pipe
}

if [ -z "`dpkg -l | grep libhidapi-libusb0`" ]; then
	sudo /share/yepkit-USB-hub/missing-lib.sh
fi 

YEPKITID=`/share/yepkit-USB-hub/ykushcmd -l | grep Serial | awk '{print $7}'`
if [ -z $YEPKITID ]; then
	YEPKITID=ERROR
	finalize
fi

#and another netcat version :-)
#if [ ! -e ncat ]; then
#	wget https://nmap.org/dist/ncat-7.60-1.x86_64.rpm
#	rpm2cpio ncat-7.60-1.x86_64.rpm | cpio -idmv
#	cp ./usr/bin/ncat .
#	rm -rf ncat-7.60-1.x86_64.rpm
#	sudo chmod -R u+x ncat
#fi


 
sudo /share/yepkit-USB-hub/ykushcmd -d 1
sudo /share/yepkit-USB-hub/ykushcmd -d 2
sudo /share/yepkit-USB-hub/ykushcmd -d 3
sudo /share/yepkit-USB-hub/ykushcmd -u 1
#sudo /share/yepkit-USB-hub/ykushcmd -u 2
#sudo /share/yepkit-USB-hub/ykushcmd -u 3

echo "will try motelist..."
sleep 1
DEV=`motelist -c | tail -n 1 | grep '/dev/' | cut -d ',' -f 2`
if [ -z $DEV ]; then 
	DEV=ERROR
	finalize
fi 
DEVNAME=`motelist -c | cut -d ',' -f 1`


if [ "$NODE" == "node0" ]; then
	prepareServer "RSSIserver" $RSSISERVERPORT
else
	#!/bin/bash
	SERVERAVAILABLE=0
	RETRIES=60
	while [ "$SERVERAVAILABLE" -eq "0" -a "$RETRIES" -gt "0" ]; do
        if [ ! "" = "`sudo /usr/bin/nmap -PN -n $RSSISERVERHOST -sU -p $RSSISERVERPORT -g $RSSISERVERPORT 2>/dev/null | grep 'udp open' 2>/dev/null`" ]; then
                SERVERAVAILABLE=1
        else
                sleep 5
                RETRIES=$((RETRIES - 1))
                echo Will wait for server $RSSISERVERHOST for another $((RETRIES*5)) seconds
         fi
	done
fi


echo "fping -aq -r 1 -i 50 $RSSISERVERHOST 2>/dev/null"

if [ ! -z `fping -aq -r 1 -i 50 $RSSISERVERHOST 2>/dev/null` ]; then
		preparePipeAndSocket "RSSIserver" $RSSISERVERPORT PIPE_RSSISERVER
fi

sg dialout "python cc2538-bsl.py -e -w -v -a 0x00206000 -p $DEV -i ab:cd:00:ff:fe:00:00:1 $WSNBIN 2>&1"

echo PIPE_RSSISERVER = $PIPE_RSSISERVER
if [ ! -z $PIPE_RSSISERVER ]; then
	sg dialout "$BIN//parseSerialDump.pl $HOSTSHORT $DEV 2>/dev/null > $PIPE_RSSISERVER"
fi

finalize

